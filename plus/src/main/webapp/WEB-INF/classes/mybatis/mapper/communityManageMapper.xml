<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fa.plus.admin.mapper.CommunityManageMapper">
	
	<delete id="deleteCommunity" parameterType="Long">
		DELETE FROM commu WHERE num = #{num}
	</delete>
	
	<sql id="where-list">
		<choose>
			<when test="schType == 'all' ">
			   ( INSTR(subject, #{kwd}) &gt; 0
		          OR DBMS_LOB.INSTR(content, #{kwd}) &gt; 0 )
			</when>
			<when test="schType == 'regDate' ">
			   ( TO_CHAR(c.regDate, 'YYYYMMDD') = #{kwd}
		          OR TO_CHAR(c.regDate, 'YYYY-MM-DD') = #{kwd} )
			</when>
			<when test="schType == 'content'">
			    DBMS_LOB.INSTR(content, #{kwd}) &gt; 0
			</when>
			<otherwise>
			    INSTR(${schType}, #{kwd}) &gt; 0
			</otherwise>
		</choose>
	</sql>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM commu c
		JOIN member1 m ON c.userId=m.userId
		<where>
			<if test="kwd != null and kwd != '' ">
				<include refid="where-list"/>
			</if>
		</where>   
	</select>
	
	<select id="communityList" parameterType="map" resultType="com.fa.plus.admin.domain.CommunityManage">
		SELECT c.num, c.userId, m.userName, subject, 
			   TO_CHAR(c.regDate, 'YYYY-MM-DD') regDate,
			   hitCount,
			   NVL(replyCount, 0) replyCount
		FROM commu c
		JOIN member1 m ON c.userId=m.userId
		LEFT OUTER JOIN (
			SELECT num, COUNT(*) replyCount FROM reply
			WHERE showReply=1
			GROUP BY num
		) d ON c.num = d.num
		<where>
			<if test="kwd != null and kwd != ''">
				<include refid="where-list"/>
			</if>
		</where>
		ORDER BY c.num DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<!-- 글보기 -->
	<select id="findById" parameterType="Long" resultType="com.fa.plus.admin.domain.CommunityManage">
		SELECT c.num, c.userId, userName, subject, content,
			   hitCount, c.regDate,
			   NVL(boardLikeCount, 0) boardLikeCount
		FROM commu c
		JOIN member1 m ON c.userId=m.userId
		LEFT OUTER JOIN (
			SELECT num, COUNT(*) boardLikeCount FROM commuLike
			GROUP BY num
		) bc ON c.num = bc.num
		WHERE c.num = #{num}
	</select>
	
	<!-- AND 가 필요 없는 경우 자동으로 제거 됨 -->
	<!-- 이전글 -->
	<select id="findByPrev" parameterType="map" resultType="com.fa.plus.admin.domain.CommunityManage">
		SELECT num, subject
		FROM commu c
		JOIN member1 m ON c.userId=m.userId
		<where>
			<if test="kwd != null and kwd != '' ">
				<include refid="where-list"/>
			</if>
			AND (num &gt; #{num})
		</where>
		ORDER BY num ASC
		FETCH FIRST 1 ROWS ONLY
	</select>

	<!-- 다음글 -->
	<select id="findByNext" parameterType="map" resultType="com.fa.plus.admin.domain.CommunityManage">
		SELECT num, subject
		FROM commu b
		JOIN member1 m ON b.userId=m.userId
		<where>
			<if test="kwd != null and kwd != '' ">
				<include refid="where-list"/>
			</if>
			AND (num &lt; #{num})
		</where>
		ORDER BY num DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
      
	<!-- 게시글 좋아요 개수 -->
	<select id="communityLikeCount" parameterType="Long" resultType="Integer">
		SELECT COUNT(*) FROM commuLike WHERE num=#{num}
	</select>
	
	<!-- 댓글 -->

	<select id="replyCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM reply
		WHERE num=#{num}
	</select>
	
	<!-- 댓글리스트 -->
	<select id="listReply" parameterType="map" resultType="com.fa.plus.admin.domain.ReplyManage">
		SELECT r.replyNum, r.userId, userName, num, reContent, r.reRegDate, NVL(showReply, 1) showReply, 
			   NVL(likeCount, 0) likeCount
		FROM reply r
		JOIN member1 m ON r.userId = m.userId
		LEFT OUTER JOIN (
			SELECT replyNum, COUNT(DECODE(bReplyLike, 1, 1)) likeCount
			FROM replyLike
			GROUP BY replyNum
		) c ON r.replyNum = c.replyNum
		WHERE num=#{num}
		ORDER BY r.replyNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<delete id="deleteReply" parameterType="map">
		DELETE FROM reply
		WHERE replyNum=#{replyNum}
	</delete>
	
	
</mapper>