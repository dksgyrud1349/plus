<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fa.plus.mapper.LessonMapper">
	<sql id="where-list">
		<choose>
			<when test="schType == 'all' ">
			   ( INSTR(className, #{kwd}) &gt; 0
		          OR DBMS_LOB.INSTR(le.content, #{kwd}) &gt; 0 )
			</when>
			<when test="schType == 'nickName' ">
			   ( INSTR(nickName, #{kwd}) &gt; 0 )
			</when>
			<when test="schType == 'le.regDate' ">
			   ( TO_CHAR(le.regDate, 'YYYYMMDD') = #{kwd}
		          OR TO_CHAR(le.regDate, 'YYYY-MM-DD') = #{kwd} )
			</when>
			<when test="schType == 'className' ">
			   ( INSTR(className, #{kwd}) &gt; 0 )
			</when>
			<when test="schType == 'content'">
			    DBMS_LOB.INSTR(le.content, #{kwd}) &gt; 0
			</when>
			<otherwise>
			    INSTR(${schType}, #{kwd}) &gt; 0
			</otherwise>
		</choose>
	</sql>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM lesson le
		JOIN member m ON m.memberIdx = le.memberIdx
		JOIN member1 m1 ON m.memberIdx = m1.memberIdx
		JOIN plus pl ON m1.userId = pl.userId
		JOIN subCategory sc ON le.subNum = sc.subNum
		JOIN mainCategory mc ON sc.mainNum = mc.mainNum
		JOIN approval ap ON le.classNum = ap.classNum
		<where>
			le.showClass = 0
			AND ap.approvalCode = 1
			<if test="kwd != null and kwd != ''">
				AND <include refid="where-list"/>
			</if>
			<if test="mainNum != 0">
				AND mc.mainNum = #{mainNum} 
			</if>
			<if test="subNum != 0">
				AND sc.subNum = #{subNum}
			</if>
		</where>
	</select>
	
	<select id="allLessonList" parameterType="map" resultType="com.fa.plus.domain.Lesson">
		SELECT le.classNum, className, price, firstPhoto, le.addr1, nickName, le.subNum, 
			TO_CHAR(startDate, 'YYYY-MM-DD') startDate, TO_CHAR(endDate, 'YYYY-MM-DD') endDate
		FROM lesson le
		JOIN member m ON m.memberIdx = le.memberIdx
		JOIN member1 m1 ON m.memberIdx = m1.memberIdx
		JOIN plus pl ON m1.userId = pl.userId
		JOIN subCategory sc ON le.subNum = sc.subNum
		JOIN mainCategory mc ON sc.mainNum = mc.mainNum
		JOIN approval ap ON le.classNum = ap.classNum
		<where>
			le.showClass = 0 
			AND ap.approvalCode = 1
			<if test="mainNum != 0">
				AND mc.mainNum = #{mainNum} 
			</if>
			<if test="subNum != 0">
				AND sc.subNum = #{subNum}
			</if>
			<if test="kwd != null and kwd != ''">
				AND <include refid="where-list"/>
			</if>
		</where>
		<choose>
			<when test="schType == 'highPrice'">
				ORDER BY price DESC
			</when>
			<when test="schType == 'lowPrice'">
				ORDER BY price ASC
			</when>
		</choose>
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<!-- 메인 카테고리 목록 -->
	<select id="listMainCategory" resultType="com.fa.plus.domain.Lesson">
		SELECT mainNum, mainName
		FROM maincategory
	</select>
	
	<!-- 서브 카테고리 목록 -->
	<select id="listSubCategory" parameterType="Long" resultType="com.fa.plus.domain.Lesson">
		SELECT subNum, subName
		FROM subcategory
		WHERE mainNum = #{mainNum}
	</select>
	
	<!-- 이미지 파일 -->
	<select id="listLessonPhoto" parameterType="Long" resultType="com.fa.plus.domain.Lesson">
		SELECT photoNum, photoName, classNum
		FROM lessonPhoto
		WHERE classNum = #{classNum}
	</select>
	
	<!-- 클래스 상세 페이지 -->
	<select id="findById" parameterType="Long" resultType="com.fa.plus.domain.Lesson">
	SELECT *
        FROM (
            SELECT 
                l.classNum, className, price, l.content, firstPhoto,
                special, TO_CHAR(l.startDate, 'YYYY-MM-DD') startDate, TO_CHAR(l.endDate, 'YYYY-MM-DD') endDate,
                l.zip, l.addr1, l.addr2, l.showClass, l.mileage, tagNum, subNum, l.memberIdx,
                photoNum, photoName,
                NVL(reviewCount, 0) reviewCount, NVL(reviewScore, 0) reviewScore,
                p.nickName
            FROM lesson l
            JOIN member1 m ON l.memberIdx = m.memberIdx
            JOIN plus p ON p.userId = m.userId
            LEFT OUTER JOIN lessonPhoto lp ON l.classNum = lp.classNum
            LEFT OUTER JOIN lessonDetail ld ON ld.classNum = l.classNum
            LEFT OUTER JOIN orders o ON o.detailNum = ld.detailNum
            LEFT OUTER JOIN ( 
                SELECT orderNum, ROUND(AVG(reviewScore), 1) reviewScore, COUNT(*) reviewCount
                FROM review r
                WHERE showReview = 0
                GROUP BY orderNum
            ) rc ON rc.orderNum = o.orderNum
            WHERE l.showClass = 0 AND l.classNum = #{classNum}
            ORDER BY l.classNum
        )
        WHERE ROWNUM = 1
	</select>
	
	<!-- 게시글 좋아요 추가 -->
	<insert id="insertLessonLike" parameterType="map">
		INSERT INTO wishList(wishDate, userId, classNum) VALUES(SYSDATE, #{userId}, #{classNum})
	</insert>
	
	<!-- 게시글 좋아요 삭제 -->
	<delete id="deleteLessonLike" parameterType="map">
		DELETE FROM wishList WHERE classNum = #{classNum} AND userId = #{userId}
	</delete>
	
	<!-- 게시글 좋아요 개수 -->
	<select id="lessonLikeCount" parameterType="Long" resultType="Integer">
		SELECT COUNT(*) FROM wishList WHERE classNum = #{classNum}
	</select>
	
	<!-- 게시글 좋아요 여부 -->
	<select id="userLessonLiked" parameterType="map" resultType="com.fa.plus.domain.Lesson">
		SELECT userId, classNum FROM wishList WHERE classNum = #{classNum} AND userId = #{userId}
	</select>
	
	<select id="getLessonDtlDate" parameterType="Long" resultType="com.fa.plus.domain.LessonDetail">
		/* lessonMapper.getLessonDtlDate - 강좌상세 페이지_수강 일자 */
		SELECT DISTINCT(TO_CHAR(classDate, 'YYYY-MM-DD')) AS classDate
		FROM lessonDetail
		WHERE classNum = #{classNum} AND classDate >= SYSDATE + 1
	</select>
	
	<select id="getLessonDtlTime" parameterType="map" resultType="com.fa.plus.domain.LessonDetail">
		/* lessonMapper.getLessonDtlTime - 강좌상세 페이지_수강 시간 */
		SELECT detailNum
		        , led.classNum
		        , classDate
		        , TO_CHAR(classDate, 'HH24:MI') AS startTime
		        , TO_CHAR(classDate + classTime/24, 'HH24:MI') AS endTime
		FROM lesson le
		JOIN lessonDetail led ON le.classNum = led.classNum
		WHERE (TO_CHAR(classDate, 'YYYY-MM-DD') = #{classDate}) AND led.classNum = #{classNum}
	</select>
</mapper>