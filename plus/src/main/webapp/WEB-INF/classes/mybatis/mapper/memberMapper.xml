<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fa.plus.mapper.MemberMapper">
	<select id="loginMember"  parameterType="String" resultType="com.fa.plus.domain.Member">
		SELECT m.memberIdx, membership, userId, userName, userPwd, regDate, lastLogin, pwdDate
		FROM member m
		JOIN member1 m1 ON m1.memberIdx = m.memberIdx
		WHERE userId = #{userId} AND enabled != 0	
	</select>
	
	<select id="memberSeq" resultType="Long">
       SELECT member_seq.NEXTVAL FROM dual 
    </select>

    <insert id="insertMember" parameterType="Long">
		INSERT INTO member(memberIdx, membership) VALUES (#{memberIdx}, 1) 
    </insert>

    <insert id="insertMember1" parameterType="com.fa.plus.domain.Member">
		INSERT INTO member1(memberIdx, userId, userName, userPwd, enabled, regDate, pwdDate, failureCnt)
		VALUES (#{memberIdx}, #{userId}, #{userName}, #{userPwd}, 1, SYSDATE, SYSDATE, 0) 
    </insert>

    <insert id="insertMember2" parameterType="com.fa.plus.domain.Member">
		INSERT INTO member2(userId, birth, email, tel, zip, addr1, addr2)
		VALUES (#{userId}, #{birth}, #{email}, #{tel}, 
			#{zip, jdbcType=VARCHAR}, #{addr1, jdbcType=VARCHAR}, 
			#{addr2, jdbcType=VARCHAR})
    </insert>
	
    <update id="insertMember12" parameterType="com.fa.plus.domain.Member">
		INSERT ALL
		INTO member1(memberIdx, userId, userName, userPwd, enabled, 
			regDate, pwdDate, failureCnt, lastLogin)
		VALUES (#{memberIdx}, #{userId}, #{userName}, #{userPwd}, 1, SYSDATE, SYSDATE, 0, SYSDATE)
		INTO member2(userId, birth, email, tel, zip, addr1, addr2)
		VALUES (#{userId}, #{birth}, #{email}, #{tel}, 
			#{zip, jdbcType=VARCHAR}, #{addr1, jdbcType=VARCHAR}, 
			#{addr2, jdbcType=VARCHAR})
		SELECT * FROM dual     
    </update>
    
    
    <select id="findById" parameterType="String" resultType="com.fa.plus.domain.Member">
		SELECT m.memberIdx, membership, m1.userId, userName, userPwd, enabled,
			regDate, pwdDate, lastLogin,
			TO_CHAR(birth, 'YYYY-MM-DD') birth, email, tel, 
			zip, addr1, addr2
		FROM member m 
		JOIN member1 m1 ON m.memberIdx = m1.memberIdx 
		LEFT OUTER JOIN member2 m2 ON m1.userId = m2.userId
		WHERE m1.userId = #{userId}
	</select>

	<select id="findByMemberIdx" parameterType="Long" resultType="com.fa.plus.domain.Member">
		SELECT m.memberIdx, membership, enabled, 
			NVL(m1.userId, 'guest') userId, NVL(userName, '손님') userName, userPwd, 
			regDate, pwdDate, lastLogin,
			TO_CHAR(birth, 'YYYY-MM-DD') birth, email, tel,
			zip, addr1, addr2
		FROM member m
		LEFT OUTER JOIN member1 m1 ON m.memberIdx = m1.memberIdx
		LEFT OUTER JOIN member2 m2 ON m1.userId = m2.userId
		WHERE m.memberIdx = #{memberIdx}
	</select>
    
    
    
    
    <!-- 권한 테이블 -->
	<insert id="insertAuthority" parameterType="com.fa.plus.domain.Member">
		INSERT INTO memberAuthority(userId, authority)
		VALUES (#{userId}, #{authority})
	</insert>

	<update id="updateAuthority" parameterType="com.fa.plus.domain.Member">
		UPDATE memberAuthority SET authority = #{authority} WHERE userId = #{userId}
	</update>
    
</mapper>