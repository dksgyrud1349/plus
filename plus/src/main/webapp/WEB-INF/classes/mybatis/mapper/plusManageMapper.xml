<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fa.plus.admin.mapper.PlusManageMapper">
	<sql id="where-list">
		<choose>
			<when test="schType=='userId'">
				INSTR(m1.userId, #{kwd}) &gt;= 1
			</when>
			<otherwise>
				INSTR(${schType}, #{kwd}) &gt;= 1
			</otherwise>
		</choose>
	</sql>
	
	<!-- 사업자 승인 위해 멤버쉽(미승인 시 50)과 권한 부여 51, seller -->
	<update id="updateMembership" parameterType="map">
		UPDATE member SET membership = 51
		WHERE memberIdx=#{memberIdx}
	</update>
	
	<update id="updateAuthority" parameterType="com.fa.plus.admin.domain.MemberManage">
		UPDATE memberAuthority SET authority = #{authority} WHERE userId = #{userId}
	</update>
	
	<select id="plusList" parameterType="map" resultType="com.fa.plus.admin.domain.MemberManage">
		SELECT m1.userId, userName, TO_CHAR(birth, 'YYYY-MM-DD') birth, tel, m.membership, enabled, email, m.memberIdx
		FROM member1 m1
		JOIN member m ON m1.memberIdx = m.memberIdx
		JOIN member2 m2 ON m1.userId = m2.userId
		<where>
			(m.membership = 51 OR m.membership = 50)
			<if test="kwd != null and kwd != ''">
				AND <include refid="where-list"/>
			</if>
			<if test="enabled!=''">
				AND enabled = #{enabled}
			</if>
		</where>
		ORDER BY memberIdx ASC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM member1 m1
		JOIN member m ON m1.memberIdx = m.memberIdx
		JOIN member2 m2 ON m1.userId = m2.userId
		<where>
			(m.membership = 51 OR m.membership = 50) 
			<if test="kwd!=null and kwd!='' ">
				AND <include refid="where-list"/>
			</if>
			<if test="enabled!=''">
				AND enabled = #{enabled}
			</if>
		</where>
	</select>
	
	<select id="findById" parameterType="String" resultType="com.fa.plus.admin.domain.MemberManage">
		SELECT membership, m1.memberIdx, m1.userId, userName, userPwd, enabled,
			m1.regDate, pwdDate, lastLogin,
			TO_CHAR(birth, 'YYYY-MM-DD') birth, email, tel, 
			zip, addr1, addr2,
			photo, nickName, content
		FROM member m
		JOIN member1 m1 ON m.memberIdx = m1.memberIdx
		LEFT OUTER JOIN member2 m2 ON m1.userId = m2.userId
		LEFT OUTER JOIN plus p ON p.userId = m1.userId
		WHERE m1.userId = #{userId} AND (m.membership = 50 OR m.membership = 51)
	</select>
	
	<select id="findIdx" parameterType="String" resultType="com.fa.plus.admin.domain.MemberManage">
		SELECT membership, m1.memberIdx, userId
		FROM member1 m1
		JOIN ON member m ON m1.memberIdx = m.memberIdx
	</select>
	
	<update id="updateFailureCountReset" parameterType="String">
		UPDATE member1 SET failureCnt = 0
		WHERE userId = #{userId}
	</update>
	
	<update id="updateMemberEnabled" parameterType="map">
		UPDATE member1 SET enabled=#{enabled} WHERE userId=#{userId}
    </update>
    
    <insert id="insertMemberState" parameterType="com.fa.plus.admin.domain.MemberManage">
		INSERT INTO memberState(num, userId, stateCode, memo, adminId, stateDate)
			VALUES (memberState_seq.NEXTVAL, #{userId}, #{stateCode}, #{memo, jdbcType=VARCHAR}, #{adminId}, SYSDATE)
	</insert>
	
	<select id="listMemberState" parameterType="String" resultType="com.fa.plus.admin.domain.MemberManage">
		SELECT num, userId, stateCode, memo, adminId, stateDate
		FROM memberState
		WHERE userId = #{userId}
		ORDER BY num DESC
	</select>
	
	<select id="findByState" parameterType="String" resultType="com.fa.plus.admin.domain.MemberManage">
		SELECT num, userId, stateCode, memo, adminId, stateDate
		FROM memberState
		WHERE userId = #{userId}
		ORDER BY num DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<select id="findByAnswer" parameterType="String" resultType="com.fa.plus.admin.domain.PluszoneAnswerManage">
		SELECT userName, a.userId, anszoneNum, a.pluszoneNum, subject, qu.num, content
		FROM pluszoneAns a
		JOIN member1 m1 ON a.userId = m1.userId
		JOIN pluszoneQ q ON q.pluszoneNum = a.pluszoneNum
		JOIN pluszoneQue qu ON qu.num = q.num
		WHERE a.userId = #{userId}
	</select>
	
	<!-- 챠트 쿼리 -->
	<select id="listAgeSection" resultType="com.fa.plus.admin.domain.AnalysisManage">
		WITH  memberAge AS (
		    SELECT m2.userId, TRUNC(MONTHS_BETWEEN(SYSDATE, birth)/12) age
		    FROM member m
			JOIN member1 m1 ON m.memberIdx = m1.memberIdx
			JOIN member2 m2 ON m1.userId = m2.userId
			WHERE m.membership &lt; 90 AND m.membership &gt; 48
		)
	<![CDATA[
			SELECT '10대' section, COUNT(*) count FROM memberAge WHERE age>=10 AND age<20
			UNION ALL
			SELECT '20대' section, COUNT(*) count FROM memberAge WHERE age>=20 AND age<30
			UNION ALL
			SELECT '30대' section, COUNT(*) count FROM memberAge WHERE age>=30 AND age<40
			UNION ALL
			SELECT '40대' section, COUNT(*) count FROM memberAge WHERE age>=40 AND age<50
			UNION ALL
			SELECT '50대' section, COUNT(*) count FROM memberAge WHERE age>=50 AND age<60
			UNION ALL
			SELECT '60대' section, COUNT(*) count FROM memberAge WHERE age>=60 AND age<70
			UNION ALL
			SELECT '기타' section, COUNT(*) count FROM memberAge WHERE age<10 OR age>=70
	]]>
	</select>
	
	<select id="classChart" resultType="com.fa.plus.admin.domain.AnalysisManage">
		WITH answer AS( 
			SELECT qu.num, subject, q.pluszoneNum, content, anszoneNum
			FROM pluszoneAns a
			JOIN pluszoneQ q ON a.pluszoneNum = q.pluszoneNum
			JOIN pluszoneQue qu ON qu.num = q.num
			WHERE qu.num = 1
		)
		<![CDATA[
		SELECT '반려동물' section, COUNT(*) count FROM answer WHERE pluszoneNum = 1
		UNION ALL
		SELECT '뷰티' section, COUNT(*) count FROM answer WHERE pluszoneNum = 2
		UNION ALL
		SELECT '운동·건강' section, COUNT(*) count FROM answer WHERE pluszoneNum = 3
		UNION ALL
		SELECT '음악·악기' section, COUNT(*) count FROM answer WHERE pluszoneNum = 4
		UNION ALL
		SELECT '쿠킹' section, COUNT(*) count FROM answer WHERE pluszoneNum = 5
        UNION ALL
		SELECT '핸드메이드' section, COUNT(*) count FROM answer WHERE pluszoneNum = 6
		UNION ALL
		SELECT '플라워가드닝' section, COUNT(*) count FROM answer WHERE pluszoneNum = 7
        UNION ALL
		SELECT '드로잉' section, COUNT(*) count FROM answer WHERE pluszoneNum = 8
		]]>
	</select>
	
	<select id="regionChart" resultType="com.fa.plus.admin.domain.AnalysisManage">
		WITH answer AS( 
			SELECT qu.num, subject, q.pluszoneNum, content, anszoneNum
			FROM pluszoneAns a
			JOIN pluszoneQ q ON a.pluszoneNum = q.pluszoneNum
			JOIN pluszoneQue qu ON qu.num = q.num
			WHERE qu.num = 2
		)
		<![CDATA[
		SELECT '서울' section, COUNT(*) count FROM answer WHERE pluszoneNum = 9
		UNION ALL
		SELECT '경기' section, COUNT(*) count FROM answer WHERE pluszoneNum = 10
		UNION ALL
		SELECT '인천' section, COUNT(*) count FROM answer WHERE pluszoneNum = 11
		UNION ALL
		SELECT '강원도' section, COUNT(*) count FROM answer WHERE pluszoneNum = 12
		UNION ALL
		SELECT '경상도' section, COUNT(*) count FROM answer WHERE pluszoneNum = 13
        UNION ALL
		SELECT '전라도' section, COUNT(*) count FROM answer WHERE pluszoneNum = 14
		UNION ALL
		SELECT '제주도' section, COUNT(*) count FROM answer WHERE pluszoneNum = 15
		]]>
	</select>
	
	<select id="priceChart" resultType="com.fa.plus.admin.domain.AnalysisManage">
		WITH answer AS( 
			SELECT qu.num, subject, q.pluszoneNum, content, anszoneNum
			FROM pluszoneAns a
			JOIN pluszoneQ q ON a.pluszoneNum = q.pluszoneNum
			JOIN pluszoneQue qu ON qu.num = q.num
			WHERE qu.num = 3
		)
		<![CDATA[
		SELECT '만원 이하' section, COUNT(*) count FROM answer WHERE pluszoneNum = 16
		UNION ALL
		SELECT '1만원~5만원' section, COUNT(*) count FROM answer WHERE pluszoneNum = 17
		UNION ALL
		SELECT '5만원~10만원' section, COUNT(*) count FROM answer WHERE pluszoneNum = 18
		UNION ALL
		SELECT '10만원 이상' section, COUNT(*) count FROM answer WHERE pluszoneNum = 19
		UNION ALL
		SELECT '그 외의 가격' section, COUNT(*) count FROM answer WHERE pluszoneNum = 20
		]]>
	</select>
	
	<select id="ageChart" resultType="com.fa.plus.admin.domain.AnalysisManage">
		WITH answer AS( 
			SELECT qu.num, subject, q.pluszoneNum, content, anszoneNum
			FROM pluszoneAns a
			JOIN pluszoneQ q ON a.pluszoneNum = q.pluszoneNum
			JOIN pluszoneQue qu ON qu.num = q.num
			WHERE qu.num = 4
		)
		<![CDATA[
		SELECT '10대-20대' section, COUNT(*) count FROM answer WHERE pluszoneNum = 21
		UNION ALL
		SELECT '30대-40대' section, COUNT(*) count FROM answer WHERE pluszoneNum = 22
		UNION ALL
		SELECT '50대 이상' section, COUNT(*) count FROM answer WHERE pluszoneNum = 23
		UNION ALL
		SELECT '상관없음' section, COUNT(*) count FROM answer WHERE pluszoneNum = 24
		]]>
	</select>
	
	

</mapper>