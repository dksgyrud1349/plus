<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fa.plus.admin.mapper.PlusManageMapper">
	<sql id="where-list">
		<choose>
			<when test="schType=='userId'">
				INSTR(m1.userId, #{kwd}) &gt;= 1
			</when>
			<otherwise>
				INSTR(${schType}, #{kwd}) &gt;= 1
			</otherwise>
		</choose>
	</sql>
	
	<!-- 사업자 승인 위해 멤버쉽(미승인 시 50)과 권한 부여 51, seller -->
	<update id="updateMembership" parameterType="map">
		UPDATE member SET membership = 51
		WHERE memberIdx=#{memberIdx}
	</update>
	
	<update id="updateAuthority" parameterType="com.fa.plus.admin.domain.MemberManage">
		UPDATE memberAuthority SET authority = #{authority} WHERE userId = #{userId}
	</update>
	
	<select id="plusList" parameterType="map" resultType="com.fa.plus.admin.domain.MemberManage">
		SELECT m1.userId, userName, TO_CHAR(birth, 'YYYY-MM-DD') birth, tel, m.membership, enabled, email, m.memberIdx
		FROM member1 m1
		JOIN member m ON m1.memberIdx = m.memberIdx
		JOIN member2 m2 ON m1.userId = m2.userId
		<where>
			m.membership = 51 OR m.membership = 50
			<if test="kwd != null and kwd != ''">
				AND <include refid="where-list"/>
			</if>
		</where>
		ORDER BY memberIdx ASC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM member1 m1
		JOIN member m ON m1.memberIdx = m.memberIdx
		JOIN member2 m2 ON m1.userId = m2.userId
		<where>
			m.membership = 51 OR m.membership = 50
			<if test="kwd != null and kwd != ''">
				<include refid="where-list"/>
			</if>
		</where>
	</select>
	
	<select id="findById" parameterType="String" resultType="com.fa.plus.admin.domain.MemberManage">
		SELECT membership, m1.memberIdx, m1.userId, userName, userPwd, enabled,
			m1.regDate, pwdDate, lastLogin,
			TO_CHAR(birth, 'YYYY-MM-DD') birth, email, tel, 
			zip, addr1, addr2,
			photo, nickName, content
		FROM member m
		JOIN member1 m1 ON m.memberIdx = m1.memberIdx
		LEFT OUTER JOIN member2 m2 ON m1.userId = m2.userId
		LEFT OUTER JOIN plus p ON p.userId = m1.userId
		WHERE m1.userId = #{userId} AND (m.membership = 50 OR m.membership = 51)
	</select>
	
	<select id="findIdx" parameterType="String" resultType="com.fa.plus.admin.domain.MemberManage">
		SELECT membership, m1.memberIdx, userId
		FROM member1 m1
		JOIN ON member m ON m1.memberIdx = m.memberIdx
	</select>
	
	<update id="updateFailureCountReset" parameterType="String">
		UPDATE member1 SET failureCnt = 0
		WHERE userId = #{userId}
	</update>
	
	<update id="updateMemberEnabled" parameterType="map">
		UPDATE member1 SET enabled=#{enabled} WHERE userId=#{userId}
    </update>
    
    <insert id="insertMemberState" parameterType="com.fa.plus.admin.domain.MemberManage">
		INSERT INTO memberState(num, userId, stateCode, memo, adminId, stateDate)
			VALUES (memberState_seq.NEXTVAL, #{userId}, #{stateCode}, #{memo, jdbcType=VARCHAR}, #{adminId}, SYSDATE)
	</insert>
	
	<select id="listMemberState" parameterType="String" resultType="com.fa.plus.admin.domain.MemberManage">
		SELECT num, userId, stateCode, memo, adminId, stateDate
		FROM memberState
		WHERE userId = #{userId}
		ORDER BY num DESC
	</select>
	
	<select id="findByState" parameterType="String" resultType="com.fa.plus.admin.domain.MemberManage">
		SELECT num, userId, stateCode, memo, adminId, stateDate
		FROM memberState
		WHERE userId = #{userId}
		ORDER BY num DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<select id="findByAnswer" parameterType="String" resultType="com.fa.plus.admin.domain.PluszoneAnswerManage">
		SELECT userName, a.userId, anszoneNum, a.pluszoneNum, subject, qu.num, content
		FROM pluszoneAns a
		JOIN member1 m1 ON a.userId = m1.userId
		JOIN pluszoneQ q ON q.pluszoneNum = a.pluszoneNum
		JOIN pluszoneQue qu ON qu.num = q.num
		WHERE a.userId = #{userId}
	</select>
	
	
<!-- 
	<select id="findByQna" parameterType="String" resultType="com.fa.plus.admin.domain.Qna">
		SELECT q.pluszoneNum, content, qCategory, anszoneNum, a.userId, ans1, ans2, ans3, m1.userName
		FROM pluszoneQ q
		JOIN pluszoneAns a ON q.pluszoneNum = a.pluszoneNum
		JOIN member1 m1 ON a.userId = m1.userId
		WHERE a.userId = #{userId}
	</select>
	
	<select id="answerChart" resultType="com.fa.plus.admin.domain.Answer">
		WITH answer AS (
			SELECT ans1, ans2, ans3, pa.pluszoneNum
			FROM pluszoneans pa
			JOIN pluszoneq pq ON pa.pluszoneNum = pq.pluszoneNum
			WHERE pa.pluszoneNum = 1
		)
<![CDATA[
		SELECT '취미' answer, COUNT(*) count FROM answer WHERE ans1 = '취미' OR ans2 = '취미' OR ans3 = '취미'
		UNION ALL
		SELECT '새로운 경험' answer, COUNT(*) count FROM answer WHERE ans1 = '새로운 경험' OR ans2 = '새로운 경험' OR ans3 = '새로운 경험'
		UNION ALL
		SELECT '데이트' answer, COUNT(*) count FROM answer WHERE ans1 = '데이트' OR ans2 = '데이트' OR ans3 = '데이트'
		UNION ALL
		SELECT '선물' answer, COUNT(*) count FROM answer WHERE ans1 = '선물' OR ans2 = '선물' OR ans3 = '선물'
		UNION ALL
		SELECT '스트레스 해소' answer, COUNT(*) count FROM answer WHERE ans1 = '스트레스 해소' OR ans2 = '스트레스 해소' OR ans3 = '스트레스 해소'
		UNION ALL
		SELECT '운동 / 건강' answer, COUNT(*) count FROM answer WHERE ans1 = '운동 / 건강' OR ans2 = '운동 / 건강' OR ans3 = '운동 / 건강'
		UNION ALL
		SELECT '뷰티' answer, COUNT(*) count FROM answer WHERE ans1 = '뷰티' OR ans2 = '뷰티' OR ans3 = '뷰티'
		UNION ALL
		SELECT '학업' answer, COUNT(*) count FROM answer WHERE ans1 = '학업' OR ans2 = '학업' OR ans3 = '학업'
]]>		
	</select>
	
	<select id="answerChart1" resultType="com.fa.plus.admin.domain.Answer">
		WITH answer AS (
			SELECT ans1, ans2, ans3, pa.pluszoneNum
			FROM pluszoneans pa
			JOIN pluszoneq pq ON pa.pluszoneNum = pq.pluszoneNum
			WHERE pa.pluszoneNum = 2
		)
<![CDATA[
		SELECT '핸드메이드' answer, COUNT(*) count FROM answer WHERE ans1 = '핸드메이드' OR ans2 = '핸드메이드' OR ans3 = '핸드메이드'
		UNION ALL
		SELECT '드로잉' answer, COUNT(*) count FROM answer WHERE ans1 = '드로잉' OR ans2 = '드로잉' OR ans3 = '드로잉'
		UNION ALL
		SELECT '음악' answer, COUNT(*) count FROM answer WHERE ans1 = '음악' OR ans2 = '음악' OR ans3 = '음악'
		UNION ALL
		SELECT '쿠킹' answer, COUNT(*) count FROM answer WHERE ans1 = '쿠킹' OR ans2 = '쿠킹' OR ans3 = '쿠킹'
		UNION ALL
		SELECT '공예' answer, COUNT(*) count FROM answer WHERE ans1 = '공예' OR ans2 = '공예' OR ans3 = '공예'
		UNION ALL
		SELECT '미용' answer, COUNT(*) count FROM answer WHERE ans1 = '미용' OR ans2 = '미용' OR ans3 = '미용'
		UNION ALL
		SELECT '스포츠' answer, COUNT(*) count FROM answer WHERE ans1 = '스포츠' OR ans2 = '스포츠' OR ans3 = '스포츠'
		UNION ALL
		SELECT '상관없음' answer, COUNT(*) count FROM answer WHERE ans1 = '상관없음' OR ans2 = '상관없음' OR ans3 = '상관없음'
]]>		
	</select>
	
	<select id="answerChart2" resultType="com.fa.plus.admin.domain.Answer">
		WITH answer AS (
			SELECT ans1, ans2, ans3, pa.pluszoneNum
			FROM pluszoneans pa
			JOIN pluszoneq pq ON pa.pluszoneNum = pq.pluszoneNum
			WHERE pa.pluszoneNum = 3
		)
<![CDATA[
		SELECT '서울' answer, COUNT(*) count FROM answer WHERE ans1 = '서울' OR ans2 = '서울' OR ans3 = '서울'
		UNION ALL
		SELECT '경기도' answer, COUNT(*) count FROM answer WHERE ans1 = '경기도' OR ans2 = '경기도' OR ans3 = '경기도'
		UNION ALL
		SELECT '인천' answer, COUNT(*) count FROM answer WHERE ans1 = '인천' OR ans2 = '인천' OR ans3 = '인천'
		UNION ALL
		SELECT '강원도' answer, COUNT(*) count FROM answer WHERE ans1 = '강원도' OR ans2 = '강원도' OR ans3 = '강원도'
		UNION ALL
		SELECT '충청도' answer, COUNT(*) count FROM answer WHERE ans1 = '충청도' OR ans2 = '충청도' OR ans3 = '충청도'
		UNION ALL
		SELECT '경상도' answer, COUNT(*) count FROM answer WHERE ans1 = '경상도' OR ans2 = '경상도' OR ans3 = '경상도'
		UNION ALL
		SELECT '전라도' answer, COUNT(*) count FROM answer WHERE ans1 = '전라도' OR ans2 = '전라도' OR ans3 = '전라도'
		UNION ALL
		SELECT '제주도' answer, COUNT(*) count FROM answer WHERE ans1 = '제주도' OR ans2 = '제주도' OR ans3 = '제주도'
]]>		
	</select>
	
	<select id="answerChart3" resultType="com.fa.plus.admin.domain.Answer">
		WITH answer AS (
			SELECT ans1, ans2, ans3, pa.pluszoneNum
			FROM pluszoneans pa
			JOIN pluszoneq pq ON pa.pluszoneNum = pq.pluszoneNum
			WHERE pa.pluszoneNum = 4
		)
<![CDATA[
		SELECT '상관없음' answer, COUNT(*) count FROM answer WHERE ans1 = '상관없음' OR ans2 = '상관없음' OR ans3 = '상관없음'
		UNION ALL
		SELECT '1만원 ~ 5만원' answer, COUNT(*) count FROM answer WHERE ans1 = '1만원 ~ 5만원' OR ans2 = '1만원 ~ 5만원' OR ans3 = '1만원 ~ 5만원'
		UNION ALL
		SELECT '5만원 ~ 10만원' answer, COUNT(*) count FROM answer WHERE ans1 = '5만원 ~ 10만원' OR ans2 = '5만원 ~ 10만원' OR ans3 = '5만원 ~ 10만원'
		UNION ALL
		SELECT '10만원 이상' answer, COUNT(*) count FROM answer WHERE ans1 = '10만원 이상' OR ans2 = '10만원 이상' OR ans3 = '10만원 이상'
]]>		
	</select>
	
	<select id="answerChart4" resultType="com.fa.plus.admin.domain.Answer">
		WITH answer AS (
			SELECT ans1, ans2, ans3, pa.pluszoneNum
			FROM pluszoneans pa
			JOIN pluszoneq pq ON pa.pluszoneNum = pq.pluszoneNum
			WHERE pa.pluszoneNum = 5
		)
<![CDATA[
		SELECT '상관없음' answer, COUNT(*) count FROM answer WHERE ans1 = '상관없음' OR ans2 = '상관없음' OR ans3 = '상관없음'
		UNION ALL
		SELECT '10대 / 20대' answer, COUNT(*) count FROM answer WHERE ans1 = '10대 / 20대' OR ans2 = '10대 / 20대' OR ans3 = '10대 / 20대'
		UNION ALL
		SELECT '30대 / 40대' answer, COUNT(*) count FROM answer WHERE ans1 = '30대 / 40대' OR ans2 = '30대 / 40대' OR ans3 = '30대 / 40대'
		UNION ALL
		SELECT '50대 이상' answer, COUNT(*) count FROM answer WHERE ans1 = '50대 이상' OR ans2 = '50대 이상' OR ans3 = '50대 이상'
]]>		
	</select>
 -->	
</mapper>