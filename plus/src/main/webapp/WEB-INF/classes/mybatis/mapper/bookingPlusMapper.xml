<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fa.plus.pluszone.mapper.BookingPlusMapper">
	<sql id="where-list">
		<choose>
			<when test="schType == 'className'">
				( INSTR(className, #{kwd}) &gt; 0 )
			</when>
			<when test="schType == 'regDate'">
				( TO_CHAR(le.regDate, 'YYYYMMDD') = #{kwd} OR TO_CHAR(le.regDate, 'YYYY-MM-DD') = #{kwd} )
			</when>
			<otherwise>
				INSTR(${schType}, #{kwd}) &gt; 0
			</otherwise>
		</choose>
	</sql>
	
	<select id="lessonList" parameterType="map" resultType="com.fa.plus.pluszone.domain.BookingPlus">
		SELECT le.classNum, className, price, sc.subNum, sc.subName, mc.mainNum, mc.mainName, 
			TO_CHAR(startDate, 'YYYY-MM-DD') startDate, TO_CHAR(endDate, 'YYYY-MM-DD') endDate, 
			TO_CHAR(le.regDate, 'YYYY-MM-DD') regDate, ht.tagName, ht.tagNum
		FROM lesson le
		JOIN member m ON m.memberIdx = le.memberIdx
		JOIN member1 m1 ON m.memberIdx = m1.memberIdx
		JOIN subCategory sc ON le.subNum = sc.subNum
		JOIN mainCategory mc ON sc.mainNum = mc.mainNum
		JOIN hashTag ht ON le.tagNum = ht.tagNum
        JOIN approval ap ON le.classNum = ap.classNum
		<where>
			le.memberIdx = #{memberIdx} AND ap.approvalCode = 1 AND endDate > SYSDATE
			<if test="kwd != null and kwd != ''">
				AND <include refid="where-list"/>
			</if>
		</where>
		ORDER BY startDate ASC
	</select>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM lesson le
		JOIN member m ON m.memberIdx = le.memberIdx
		JOIN member1 m1 ON m.memberIdx = m1.memberIdx
		JOIN subCategory sc ON le.subNum = sc.subNum
		JOIN mainCategory mc ON sc.mainNum = mc.mainNum
		JOIN hashTag ht ON le.tagNum = ht.tagNum
        JOIN approval ap ON le.classNum = ap.classNum
        <where>
        	m.memberIdx = #{memberIdx} AND ap.approvalCode = 1 AND endDate > SYSDATE
        	<if test="kwd != null and kwd != ''">
				AND <include refid="where-list"/>
			</if>
        </where>
	</select>
	
	<select id="lessonDetailList" parameterType="map" resultType="com.fa.plus.pluszone.domain.BookingPlus">
		SELECT detailNum, TO_CHAR(classDate, 'YYYY-MM-DD HH24:MI:SS') classDate, count
		FROM lessonDetail
		WHERE classNum = #{classNum}
		ORDER BY detailNum ASC
	</select>
	
	<select id="detailCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM lessonDetail
		WHERE classNum = #{classNum}
	</select>
	
	<select id="bookingList" parameterType="map" resultType="com.fa.plus.pluszone.domain.BookingPlus">
		SELECT m1.userId, TO_CHAR(m2.birth, 'YYYY-MM-DD') birth, m2.tel, le.className, od.orderNum, od.count AS orderCount, od.state, TO_CHAR(od.oDate, 'YYYY-MM-DD HH24:MI:SS') oDate
		FROM orderDetail od
		JOIN orders os ON od.orderNum = os.orderNum
		JOIN lessonDetail ld ON os.detailNum = ld.detailNum
		JOIN lesson le ON ld.classNum = le.classNum
		JOIN member m ON os.memberIdx = m.memberIdx
		JOIN member1 m1 ON m.memberIdx = m1.memberIdx
		JOIN member2 m2 ON m1.userId = m2.userId
		WHERE ld.detailNum = #{detailNum} AND od.state = #{state}
		ORDER BY oDate ASC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="bookingCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM orderDetail od
		JOIN orders os ON od.orderNum = os.orderNum
		JOIN lessonDetail ld ON os.detailNum = ld.detailNum
		JOIN lesson le ON ld.classNum = le.classNum
		JOIN member m ON os.memberIdx = m.memberIdx
		JOIN member1 m1 ON m.memberIdx = m1.memberIdx
		JOIN member2 m2 ON m1.userId = m2.userId
		WHERE ld.detailNum = #{detailNum} AND od.state = #{state}
	</select>
	
	<update id="updateState" parameterType="map">
		UPDATE orderDetail SET state = #{state} WHERE orderNum = #{orderNum}
	</update>
</mapper>