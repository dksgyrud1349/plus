<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fa.plus.admin.mapper.EventManageMapper">

	<insert id="insertEvent" parameterType="com.fa.plus.admin.domain.EventManage">
		INSERT INTO event(eventNum, userId, subject, eContent, startDate, endDate, showEvent, hitCount,
						eventKind, discountMoney, discountPercent, eventImg)
			VALUES (event_seq.NEXTVAL, #{userId}, #{subject}, #{eContent}, TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS'), 
					TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS'), #{showEvent}, 0, 
				#{eventKind}, #{discountMoney, jdbcType=INTEGER}, #{discountPercent, jdbcType=DOUBLE}, #{eventImg, jdbcType=VARCHAR})
	</insert>

	<sql id="where-list">
		<choose>
			<when test="schType == 'all' ">
			   ( INSTR(subject, #{kwd}) &gt; 0
		          OR DBMS_LOB.INSTR(eContent, #{kwd}) &gt; 0 )
			</when>
			<otherwise>
			   ( TO_CHAR(${schType}, 'YYYYMMDD') = #{kwd}
		          OR TO_CHAR(${schType}, 'YYYY-MM-DD') = #{kwd} )
			</otherwise>
		</choose>
	</sql>
	
	<sql id="period-list">
		<choose>
			<when test="category == 'progress' ">
				( startDate &lt;= SYSDATE  AND endDate &gt; SYSDATE )
			</when>
			<when test="category == 'upcoming' ">
				( startDate &gt;= SYSDATE )
			</when>
			<when test="category == 'ended' ">
				( endDate &lt; SYSDATE )
			</when>
		</choose>
	</sql>
	
	<!-- 글개수 -->
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM event
		<where>
			<if test="showEvent != null and showEvent == 1">
				showEvent = 1
			</if>
			<if test="category != 'all' ">
				AND <include refid="period-list"/>
			</if>
			<if test="kwd!=null and kwd!='' ">
				AND <include refid="where-list"/>
			</if>
		</where>   
	</select>
	
	<!-- 글리스트 -->
	<select id="listEvent" parameterType="map" resultType="com.fa.plus.admin.domain.EventManage">
		SELECT eventNum, subject, hitCount, showEvent,
			   TO_CHAR(startDate,'YYYY-MM-DD HH24:MI') startDate,
			   TO_CHAR(endDate, 'YYYY-MM-DD HH24:MI') endDate, eventKind, userId, eventImg
		FROM event e
		<where>
			<if test="showEvent != null and showEvent == 1">
				showEvent = 1
			</if>
			<if test="category != 'all' ">
				AND <include refid="period-list"/>
			</if>
			<if test="kwd != null and kwd != ''">
				AND <include refid="where-list"/>
			</if>
		</where>
		ORDER BY endDate DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<!-- 글보기 -->
	<select id="findById" parameterType="Long" resultType="com.fa.plus.admin.domain.EventManage">
		SELECT eventNum, e.userId, userName, subject, eContent, 
			TO_CHAR(startDate,'YYYY-MM-DD HH24:MI') startDate,
			TO_CHAR(endDate, 'YYYY-MM-DD HH24:MI') endDate, 
			showEvent, hitCount, eventKind, eventImg, discountMoney, discountPercent
		FROM event e
		JOIN member1 m ON e.userId = m.userId
		WHERE eventNum = #{eventNum}
	</select>
	
	<!-- 조회수 증가 -->
	<update id="updateHitCount" parameterType="Long">
		UPDATE event SET hitCount = hitCount+1 WHERE eventNum = #{eventNum}
	</update>
	
	<!-- 이전글 -->
	<select id="findByPrev" parameterType="map" resultType="com.fa.plus.admin.domain.EventManage">
		SELECT eventNum, subject
		FROM event
		<where>
			<if test="showEvent != null and showEvent == 1">
				showEvent = 1
			</if>
			<if test="category != 'all' ">
				AND <include refid="period-list"/>
			</if>
			<if test="kwd != null and kwd != '' ">
				AND <include refid="where-list"/>
			</if>
			AND (eventNum &gt; #{eventNum})
		</where>
		ORDER BY endDate ASC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<!-- 다음글 -->
	<select id="findByNext" parameterType="map" resultType="com.fa.plus.admin.domain.EventManage">
		SELECT eventNum, subject
		FROM event
		<where>
			<if test="showEvent != null and showEvent == 1">
				showEvent = 1
			</if>
			<if test="category != 'all' ">
				AND <include refid="period-list"/>
			</if>
			<if test="kwd != null and kwd != '' ">
				AND <include refid="where-list"/>
			</if>
			AND (eventNum &lt; #{eventNum})
		</where>
		ORDER BY endDate DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<!-- 수정 -->
	<update id="updateEvent" parameterType="com.fa.plus.admin.domain.EventManage">
		UPDATE event SET subject=#{subject}, eContent=#{eContent},
				startDate=TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS'),
				endDate=TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS'),
				showEvent=#{showEvent}, eventKind=#{eventKind}, discountMoney=#{discountMoney, jdbcType=INTEGER},
				discountPercent=#{discountPercent, jdbcType=DOUBLE}, eventImg=#{eventImg, jdbcType=VARCHAR}
		WHERE eventNum = #{eventNum}
	</update>
 
	<!-- 삭제 -->
	<delete id="deleteEvent" parameterType="Long">
		DELETE FROM event WHERE eventNum = #{eventNum}
	</delete>
	
	
	<!-- 이벤트 클래스 추가 -->
	<insert id="insertEventClass" parameterType="com.fa.plus.admin.domain.EventManage">
		INSERT INTO eventClass (eventNum, classNum)
			VALUES (#{eventNum}, #{classNum})
	</insert>
	
	<delete id="deleteEventClass" parameterType="Long">
		DELETE FROM eventClass WHERE classNum = #{classNum}
	</delete>
	
	<!-- 등록위한 클래스 리스트 -->
	<sql id="where-classList">
		<choose>
			<when test="schType == 'classNum' ">
			  	INSTR(l.classNum, #{kwd}) &gt; 0
			</when>
			<when test="schType == 'className' ">
			  	INSTR(className, #{kwd}) &gt; 0
			</when>
			<when test="schType == 'userId' ">
			  	INSTR(m1.userId, #{kwd}) &gt; 0
			</when>
			<otherwise>
				INSTR(p.nickName, #{kwd}) &gt; 0
			</otherwise>
		</choose>
	</sql>
	
	<select id="searchClass" parameterType="map" resultType="com.fa.plus.admin.domain.EventManage">
		SELECT l.classNum, className, nickName, m1.userId, price
		FROM lesson l
		JOIN member1 m1 ON m1.memberIdx = l.memberIdx
		JOIN plus p ON p.userId = m1.userId
		<where>
			showClass = 0
			<if test="kwd != null and kwd != ''">
				AND	<include refid="where-classList"/>
			</if>
		</where>
		ORDER BY l.classNum ASC
	</select>
	
	<!-- 이벤트에 등록된 클래스 리스트 -->
	<select id="eventClassList" parameterType="map" resultType="com.fa.plus.admin.domain.EventManage">
		SELECT ec.eventNum, subject, ec.classNum, className, nickName, price, discountPercent, discountMoney
		FROM eventClass ec
		JOIN lesson l ON ec.classNum = l.classNum
		JOIN event e ON ec.eventNum = e.eventNum
		JOIN member1 m1 ON l.memberIdx = m1.memberIdx
		JOIN plus p ON m1.userId = p.userId
		WHERE ec.eventNum = #{eventNum}
	</select>
	
	<select id="classDataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM lesson l 
		JOIN member1 m1 ON m1.memberIdx = l.memberIdx
		JOIN plus p ON p.userId = m1.userId
		WHERE eventNum = #{eventNum}
	</select>
	
	<update id="updateClassPrice" parameterType="com.fa.plus.admin.domain.EventManage">
		UPDATE lesson SET price = #{price} WHERE classNum = #{classNum}
	</update>
</mapper>